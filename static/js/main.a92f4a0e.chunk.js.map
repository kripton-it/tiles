{"version":3,"sources":["store/board/actions.js","utils.js","store/board/reducer.js","store/game/reducer.js","store/index.js","store/game/actions.js","components/Cell/index.js","components/Cell/Cell.jsx","components/Board/index.js","components/Board/Board.jsx","components/Info/index.js","components/Info/Info.jsx","components/Settings/index.js","components/Settings/Settings.jsx","components/Game/index.jsx","index.js"],"names":["updateCellState","position","state","payload","type","setTimer","timerId","getStartTable","size","length","array","Array","fill","map","item","index","i","j","Math","floor","random","table","value","ceil","initialBoardState","current","timer","initialGameState","isStarted","isFinished","isPaused","points","rootReducer","combineReducers","board","action","row","index1","index2","game","initialState","store","createStore","composeWithDevTools","applyMiddleware","thunk","connect","dispatch","handleClick","getState","clearTimeout","console","log","setTimeout","setCurrent","className","onClick","disabled","key","restartGame","createBoard","setSize","startGame","selectLevel","evt","target","onSubmit","preventDefault","level","checked","onChange","Game","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a92f4a0e.chunk.js","sourcesContent":["import { addPoints, finishGame, togglePause } from \"../game/actions\";\r\n\r\nexport const CREATE_BOARD = \"CREATE_BOARD\";\r\nexport const UPDATE_CELL_STATE = \"UPDATE_CELL_STATE\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const RESET_CURRENT = \"RESET_CURRENT\";\r\nexport const SET_TIMER = \"SET_TIMER\";\r\n\r\nexport const createBoard = (size) => ({\r\n  payload: size,\r\n  type: CREATE_BOARD\r\n});\r\n\r\nexport const updateCellState = (position, state) => ({\r\n  payload: {\r\n    position,\r\n    state\r\n  },\r\n  type: UPDATE_CELL_STATE\r\n});\r\n\r\nexport const setCurrent = (position, value) => ({\r\n  payload: { position, value },\r\n  type: SET_CURRENT\r\n});\r\n\r\nexport const resetCurrent = () => ({\r\n  type: RESET_CURRENT\r\n});\r\n\r\nexport const setTimer = (timerId) => ({\r\n  payload: timerId,\r\n  type: SET_TIMER\r\n});\r\n\r\nexport const handleClick = (position) => (dispatch, getState) => {\r\n  const { current, table, timer } = getState().board;\r\n\r\n  if (!current) {\r\n    // first cell\r\n    dispatch(updateCellState(position, \"temp\"));\r\n    dispatch(setCurrent(position, table[position.i][position.j].value));\r\n    const timerId = setTimeout(() => {\r\n      dispatch(updateCellState(position, \"closed\"));\r\n      dispatch(resetCurrent());\r\n    }, 3000);\r\n    dispatch(setTimer(timerId));\r\n  } else if (current.value === table[position.i][position.j].value) {\r\n    // guessed correct\r\n    clearTimeout(timer);\r\n    dispatch(updateCellState(current.position, \"correct\"));\r\n    dispatch(updateCellState(position, \"correct\"));\r\n    dispatch(addPoints());\r\n    const { points, size } = getState().game;\r\n    console.log(points, size);\r\n    if (points === size * size / 2) {\r\n      dispatch(finishGame());\r\n    }\r\n    dispatch(resetCurrent());\r\n    dispatch(setTimer(null));\r\n  } else {\r\n    // guessed wrong\r\n    clearTimeout(timer);\r\n    dispatch(updateCellState(current.position, \"error\"));\r\n    dispatch(updateCellState(position, \"error\"));\r\n    dispatch(togglePause());\r\n    setTimeout(() => {\r\n      dispatch(togglePause());\r\n      dispatch(updateCellState(current.position, \"closed\"));\r\n      dispatch(updateCellState(position, \"closed\"));\r\n      dispatch(resetCurrent());\r\n    }, 3000);\r\n  }\r\n}","export const getStartTable = (size) => {\r\n  const length = size * size;\r\n  // Initial array: for size = 2 - [1, 2, 3, 4]\r\n  const array = new Array(length).fill(0).map((item, index) => index + 1);\r\n  // Shuffle initial array: for size = 2 - [3, 1, 4, 2]\r\n  for (let i = length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  // Empty table\r\n  const table = new Array(size);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    // Empty row\r\n    table[i] = new Array(size);\r\n\r\n    for (let j = 0; j < size; j++) {\r\n      // Fill row with values from shuffled array\r\n      table[i][j] = {\r\n        state: 'closed',\r\n        value: Math.ceil(array[i * size + j] / 2)\r\n      };\r\n    }\r\n  }\r\n\r\n  return table; // for size = 2 - [[2, 1], [2, 1]]\r\n}","import { CREATE_BOARD, RESET_CURRENT, SET_CURRENT, SET_TIMER, UPDATE_CELL_STATE } from \"./actions\";\r\n\r\nimport { getStartTable } from \"../../utils\";\r\n\r\nexport const initialBoardState = {\r\n  current: null,\r\n  timer: null,\r\n  table: []\r\n};\r\n\r\nexport default (state = initialBoardState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_BOARD:\r\n      return {\r\n        ...state,\r\n        table: getStartTable(action.payload)\r\n      };\r\n\r\n    case SET_TIMER:\r\n      return {\r\n        ...state,\r\n        timer: action.payload\r\n      };\r\n\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n\r\n    case RESET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n\r\n    case UPDATE_CELL_STATE: {\r\n      const { i, j } = action.payload.position;\r\n      return {\r\n        ...state,\r\n        table: state.table.map((row, index1) => {\r\n          return i !== index1 ? row : row.map((item, index2) => {\r\n            return j !== index2 ? item : {\r\n              ...item,\r\n              state: action.payload.state\r\n            };\r\n          });\r\n        })\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { ADD_POINTS, FINISH_GAME, RESTART_GAME, SET_SIZE, START_GAME, TOGGLE_PAUSE } from \"./actions\";\r\n\r\nexport const initialGameState = {\r\n  isStarted: false,\r\n  isFinished: false,\r\n  isPaused: false,\r\n  size: 6,\r\n  points: 0\r\n};\r\n\r\nexport default (state = initialGameState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POINTS:\r\n      return {\r\n        ...state,\r\n        points: state.points + 1\r\n      };\r\n\r\n    case START_GAME:\r\n      return {\r\n        ...state,\r\n        isStarted: true\r\n      };\r\n\r\n    case TOGGLE_PAUSE:\r\n      return {\r\n        ...state,\r\n        isPaused: !state.isPaused\r\n      };\r\n\r\n    case SET_SIZE:\r\n      return {\r\n        ...state,\r\n        size: action.payload\r\n      };\r\n\r\n    case FINISH_GAME:\r\n      return {\r\n        ...state,\r\n        isFinished: true\r\n      };\r\n\r\n    case RESTART_GAME:\r\n      return initialGameState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport boardReducer, { initialBoardState } from \"./board/reducer\";\r\nimport gameReducer, { initialGameState } from \"./game/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  board: boardReducer,\r\n  game: gameReducer\r\n});\r\n\r\nconst initialState = {\r\n  board: initialBoardState,\r\n  game: initialGameState\r\n};\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);","export const START_GAME = \"START_GAME\";\r\nexport const TOGGLE_PAUSE = \"TOGGLE_PAUSE\";\r\nexport const SET_SIZE = \"SET_SIZE\";\r\nexport const ADD_POINTS = \"ADD_POINTS\";\r\nexport const FINISH_GAME = \"FINISH_GAME\";\r\nexport const RESTART_GAME = \"RESTART_GAME\";\r\n\r\nexport const startGame = () => ({\r\n  type: START_GAME\r\n});\r\n\r\nexport const togglePause = () => ({\r\n  type: TOGGLE_PAUSE\r\n});\r\n\r\nexport const setSize = (size) => ({\r\n  payload: size,\r\n  type: SET_SIZE\r\n});\r\n\r\nexport const addPoints = () => ({\r\n  type: ADD_POINTS\r\n});\r\n\r\nexport const finishGame = () => ({\r\n  type: FINISH_GAME\r\n});\r\n\r\nexport const restartGame = () => ({\r\n  type: RESTART_GAME\r\n});","import { connect } from \"react-redux\";\r\n\r\nimport { Cell } from \"./Cell\";\r\n\r\nimport { handleClick } from \"../../store/board/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isPaused: state.game.isPaused,\r\n  size: state.game.size,\r\n  table: state.board.table\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleClick: (position) => dispatch(handleClick(position))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell);","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport const Cell = ({ isPaused, position, size, table, handleClick }) => {\r\n  const { state, value } = table[position.i][position.j];\r\n\r\n  const onClick = () => {\r\n    handleClick(position);\r\n  }\r\n\r\n  return (\r\n    <button \r\n      type=\"button\"\r\n      className={`cell-${state} cell-${size}`}\r\n      onClick={onClick}\r\n      disabled={isPaused || state !== \"closed\"}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { Board } from \"./Board\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isStarted: state.game.isStarted,\r\n  table: state.board.table\r\n});\r\n\r\nexport default connect(mapStateToProps)(Board);","import React from \"react\";\r\n\r\nimport Cell from \"../Cell\";\r\n\r\nexport const Board = ({ isStarted, table }) => {\r\n  if (!isStarted) return null;\r\n\r\n  const board = table.map((row, i) => {\r\n    return (\r\n      <div key={i}>{\r\n        row.map((item, j) => {\r\n          const position = {\r\n            i, j\r\n          }\r\n          return <Cell key={j} position={position} />\r\n        })\r\n      }</div>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className=\"game-board\">\r\n      {board}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { Info } from \"./Info\";\r\n\r\nimport { restartGame } from \"../../store/game/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isFinished: state.game.isFinished,\r\n  isStarted: state.game.isStarted,\r\n  points: state.game.points\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  restartGame: () => dispatch(restartGame())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Info);","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport const Info = ({ isFinished, isStarted, points, restartGame }) => {\r\n  if (!isStarted) return null;\r\n  if (isFinished) {\r\n    return (\r\n      <div className=\"report\">\r\n        <h1>\r\n          Congratulations! Game over!\r\n          <button type=\"button\" onClick={restartGame} className=\"restart\">New game</button>\r\n        </h1>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"info\">\r\n      <p>Correct answers: {points}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { Settings } from \"./Settings\";\r\n\r\nimport { createBoard } from \"../../store/board/actions\";\r\nimport { setSize, startGame } from \"../../store/game/actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isStarted: state.game.isStarted,\r\n  size: state.game.size\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createBoard: (size) => dispatch(createBoard(size)),\r\n  setSize: (size) => dispatch(setSize(size)),\r\n  startGame: () => dispatch(startGame())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const Settings = ({ createBoard, isStarted, setSize, size, startGame }) => {\r\n  if (isStarted) return null;\r\n\r\n  const selectLevel = (evt) => {\r\n    setSize(+evt.target.value);\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    createBoard(size);\r\n    startGame();\r\n  }\r\n\r\n  const levels = [\r\n    {\r\n      level: \"Easy\",\r\n      size: 4\r\n    },\r\n    {\r\n      level: \"Middle\",\r\n      size: 6\r\n    },\r\n    {\r\n      level: \"Difficult\",\r\n      size: 8\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"settings\">\r\n      <p className=\"invite\">Please, select level:</p>\r\n      <div className=\"radios\">\r\n        {levels.map(item => (\r\n          <div className=\"radio\" key={item.size}>\r\n            <label>\r\n              <input type=\"radio\" value={item.size} checked={size === item.size} onChange={selectLevel} />\r\n              {item.level}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"start\">\r\n        <button type=\"submit\" >Start game</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\nimport \"./styles.css\";\n\nimport Board from \"../Board\";\nimport Info from \"../Info\";\nimport Settings from \"../Settings\";\n\nconst Game = () => {\n  return (\n    <div className=\"game\">\n      <Settings />\n      <Board />\n      <Info />\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\n\n\nimport './index.css';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}